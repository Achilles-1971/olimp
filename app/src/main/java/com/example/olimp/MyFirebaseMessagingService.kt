package com.example.olimp

import android.util.Log
import com.example.olimp.ui.notifications.NotificationHelper
import com.example.olimp.utils.SessionManager
import com.google.firebase.messaging.FirebaseMessagingService
import com.google.firebase.messaging.RemoteMessage

class MyFirebaseMessagingService : FirebaseMessagingService() {

    override fun onNewToken(token: String) {
        super.onNewToken(token)
        Log.d("FCM_TOKEN", "–ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω: $token")
        // üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –≤ SessionManager
        SessionManager(this).saveFcmToken(token)
        // üîÑ –¢–∞–∫–∂–µ –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ —Å—Ä–∞–∑—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–≥–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä ‚Äî —Å–¥–µ–ª–∞–µ–º –ø–æ–∑–∂–µ
    }

    override fun onMessageReceived(remoteMessage: RemoteMessage) {
        super.onMessageReceived(remoteMessage)

        // 1. –ò–∑–≤–ª–µ–∫–∞–µ–º title –∏ body –∏–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        val title = remoteMessage.notification?.title ?: "–ù–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"
        val body = remoteMessage.notification?.body ?: "–ü—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"

        // 2. –ò–∑–≤–ª–µ–∫–∞–µ–º data payload
        val dataMap = remoteMessage.data
        val notifType = dataMap["type"]
        val eventId = dataMap["event_id"]
        val senderId = dataMap["sender_id"]
        val receiverId = dataMap["receiver_id"]

        // 3. –õ–æ–≥–∏—Ä—É–µ–º –≤—Å—ë –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        Log.d("FCM_MESSAGE", "–ü–æ–ª—É—á–µ–Ω–æ FCM: $title - $body")
        Log.d("FCM_MESSAGE", "Data payload: $dataMap")

        // 4. –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π userId –∏–∑ SessionManager
        val sessionManager = SessionManager(applicationContext)
        val currentUserId = sessionManager.getUserId()
        if (currentUserId == null) {
            Log.w("FCM_MESSAGE", "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å currentUserId ‚Äî —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ")
            return
        }

        // 5. –°–ø–∏—Å–æ–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Ç–∏–ø–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        val allowedTypes = listOf(
            "new_message",
            "event_approved",
            "event_submitted",
            "event_rejected",
            "event_joined",
            "event_left",
            "event_comment",
            "event_comment_reply",
            "event_reminder",
            "comment_liked"
        )

        // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –∏ –∞–¥—Ä–µ—Å–æ–≤–∞–Ω–æ —Ç–µ–∫—É—â–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        if (notifType in allowedTypes && receiverId != null && receiverId.toIntOrNull() == currentUserId) {
            NotificationHelper.showNotification(
                context = applicationContext,
                title = title,
                body = body,
                notifType = notifType,
                eventId = eventId,
                senderId = senderId
            )
            Log.d("FCM_MESSAGE", "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞–Ω–æ: type=$notifType, –¥–ª—è userId=$currentUserId")
        } else {
            Log.d("FCM_MESSAGE", "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ: type=$notifType, receiverId=$receiverId, currentUserId=$currentUserId")
        }
    }
}
